* Turing Drawings with Processing
Final project for UCSB Art 122 (Spring 2013) by Kasper Primdal Lauritzen.

** Abstract
I created a way for the audience to see, create and play with Turing
Drawings. A Turing Drawing is a 2D picture that evolves, pixel by
pixel, according to simple rules. This is a
Universal Turing Machine (It can in theory produce any desired
output). 

Simple rules can create powerful patterns, oscillations or seemingly
random noise.

The audience will be able to create a Turing Drawing with randomized
rules. Then, if the pattern emerging are interesting, she will be able
to save those rules to a growing library of curated rules. There will
be an option to change the rules of the drawing at any time, either to
new random rules or fetching them from the library. 

#+BEGIN_HTML
  <table border="1">
  <tbody><tr>
  <th rowspan="3" colspan="2"></th>
  <th colspan="6">Current color</th>
  </tr>
  <tr>
  <th colspan="3">0</th>
  <th colspan="3">1</th>
  </tr>
  <tr style="font-size:9pt">
  <th>Write color</th>
  <th>Turn</th>
  <th>Next state</th>
  <th>Write color</th>
  <th>Turn</th>
  <th>Next state</th>
  </tr>
  <tr>
  <th rowspan="2">Current state</th>
  <th>0</th>
  <td>1</td>
  <td>R</td>
  <td>0</td>
  <td>1</td>
  <td>R</td>
  <td>1</td>
  </tr>
  <tr>
  <th>1</th>
  <td>0</td>
  <td>N</td>
  <td>0</td>
  <td>0</td>
  <td>N</td>
  <td>1</td>
  </tr>
  </tbody></table>
#+END_HTML  

** Background
The idea for the project came from [[http://maximecb.github.io/Turing-Drawings/][Maxime Chevalier-Boisvert]]s
website, where a simple Turing Drawing generator lets you see a quick
simulation of random rules (Cool examples [[http://maximecb.github.io/Turing-Drawings/#4,3,2,1,2,1,2,3,0,1,1,1,2,2,1,1,3,1,1,2,2,2,1,2,1,2,3,2,0,3,1,2,0,2,1,3,2,0][here]] and [[http://maximecb.github.io/Turing-Drawings/#4,3,3,1,3,2,2,2,1,1,3,3,1,2,1,1,1,3,1,0,2,2,0,2,1,3,0,2,3,2,1,3,0,1,3,3,1,0][here]]).

Another inspiration is Stephen Wolfram's /A New Kind of Science/ [1]. Here the simplest possible rules, Cellular Automata, are described and explored (esp. in chapter 3). 

And a clear precursor for this pixel-by-pixel evolution is Conway's Game of Life [2]. 

My project will differ from other implementations of Turing Drawings in the interactivity. Being able to change the rules 'mid-game' will completely alter the pattern that emerges.  
** Goals
The goal is to let the audience explore the patterns and flows that simple
rules can create. 

It is interesting to experience the rules unfold into patterns that can't be predicted from just thinking about the rules. They have to be simulated 'for the magic to happen'. 

** Implementation
I have a 2D array, /world/, with each cell representing the color of
each pixel on the canvas. Then I have a designated cell that is
/turned on/, and store it's /state/ and /heading/ in separate
variables. 

The rules are randomly produced on the fly, according to how many
colors and states are currently allowed. Or they can be retrieved
from a text file where previously saved rules are stored, with one
set of rules on each line. 
* Footnotes
[1] Stephen Wolfram, "A New Kind of Science," (Wolfram Media, 2002), [[http://www.wolframscience.com/nksonline/toc.html][Online here]]

[2] Martin Gardner, "Mathematical Games - The fantastic combinations of John Conway's new solitaire game 'life'". Scientific American 223. pp. 120â€“123 
